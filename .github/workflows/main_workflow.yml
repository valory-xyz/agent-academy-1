name: main_workflow

on:
  push:
    branches:
      - develop
      - main
  pull_request:

jobs:
  e2e-tests:
    continue-on-error: True
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ] # TODO add [macos-latest, windows-latest]
        python-version: [ "3.10" ] # TODO add [3.8, 3.9]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        uses: srt32/git-actions@v0.0.3
        with:
          args: git config --global --add safe.directory /github/workspace/third_party/safe-contracts && git config --global --add safe.directory /github/workspace && git submodule update --init --recursive
      - uses: actions/setup-python@v3
        with:
          submodules: recursive
          python-version: ${{ matrix.python-version }}
      - if: matrix.os == 'ubuntu-latest'
        name: Install dependencies (ubuntu-latest)
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean
          pip install tox
          pip install --upgrade setuptools==60.10.0

          # install Protobuf compiler
          wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-linux-x86_64.zip
          unzip protoc-3.11.4-linux-x86_64.zip -d protoc
          sudo mv protoc/bin/protoc /usr/local/bin/protoc

          # install IPFS
          sudo apt-get install -y wget
          wget -O ./go-ipfs.tar.gz https://dist.ipfs.io/go-ipfs/v0.6.0/go-ipfs_v0.6.0_linux-amd64.tar.gz
          tar xvfz go-ipfs.tar.gz
          sudo mv go-ipfs/ipfs /usr/local/bin/ipfs
          ipfs init

          # install Tendermint
          wget -O tendermint.tar.gz https://github.com/tendermint/tendermint/releases/download/v0.34.19/tendermint_0.34.19_linux_amd64.tar.gz
          tar -xf tendermint.tar.gz
          sudo mv tendermint /usr/local/bin/tendermint

          # pull node image needed for the integration tests
          docker pull node:16.7.0

          # build the hardhat node in third_party/contracts-elcol
          cd third_party/contracts-elcol && yarn

      - name: e2e tests
        run: |
          tox -e py${{ matrix.python-version }} -- -m 'e2e'
